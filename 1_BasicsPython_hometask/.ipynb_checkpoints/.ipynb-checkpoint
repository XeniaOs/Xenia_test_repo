{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Фраза 1 длиннее фразы 2\n"
     ]
    }
   ],
   "source": [
    "phrase_1 = 'Насколько проще было бы писать программы, если бы не заказчики'\n",
    "phrase_2 = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'\n",
    "if len (phrase_1) > len (phrase_2):\n",
    "    print('Фраза 1 длиннее фразы 2')\n",
    "elif len(phrase_1)< len(phrase_2):\n",
    "    print('Фраза 2 длиннее фразы 1')\n",
    "elif len(phrase_1)== len(phrase_2):\n",
    "    print ('Фразы равной длины')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Норм год\n"
     ]
    }
   ],
   "source": [
    "year = 2019\n",
    "if year % 4 == 0:\n",
    "    print('Адок год')\n",
    "elif year % 400 == 0:\n",
    "    print ('Адок год')\n",
    "elif year % 100 == 0:\n",
    "    print('Норм год')\n",
    "else:\n",
    "    print('Норм год')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gemini\n",
      "Cancer\n"
     ]
    }
   ],
   "source": [
    "day = 5\n",
    "month = 6\n",
    "if day >= 21 and month ==3:\n",
    "    print('Aries')\n",
    "elif day <= 20 and month ==4:\n",
    "    print('Aries')\n",
    "if day >= 21 and month ==4:\n",
    "    print('Taurus')\n",
    "if day <= 20 and month ==5:\n",
    "    print('Taurus')\n",
    "if day >= 21 and month ==5:\n",
    "    print('Gemini')\n",
    "if day <= 20 and month ==6:\n",
    "    print('Gemini')\n",
    "    \n",
    "#также может быть вот такой вариант для решения#\n",
    "\n",
    "date= 9\n",
    "month= 7\n",
    "\n",
    "if (date>=21 and date<=31 and month==3) or( month==4 and date>=1 and date<=19):\n",
    "    print('Aries')\n",
    "if (date>=21 and date<=31 and month ==4) or( month==5 and date>=1 and date<=20):\n",
    "    print('Taurus')\n",
    "if (date>=21 and date <=31 and month ==5) or( month ==6 and date >=1 and date <=20):\n",
    "    print('Gemini')\n",
    "if (date>= 21 and date <=31 and month ==6) or(month ==7 and date >=1 and date <=20):\n",
    "    print('Cancer')\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Коробка для лыж\n"
     ]
    }
   ],
   "source": [
    "width = 10\n",
    "length = 205\n",
    "height = 5\n",
    "\n",
    "if width < 15 and length < 15 and height < 15:\n",
    "    print('Коробка №1')\n",
    "\n",
    "if width > 15 and width < 50:\n",
    "    print('Коробка №2')\n",
    "elif length > 15 and length < 50:\n",
    "    print ('Коробка №2')\n",
    "elif height > 15 and height < 50:\n",
    "     print('Коробка №2')\n",
    "if length >= 200:\n",
    "    print('Коробка для лыж')\n",
    "else:\n",
    "    print('Стандартная коробка №3')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
